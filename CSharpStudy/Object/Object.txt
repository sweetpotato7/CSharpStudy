// 개체(Object, 오브젝트): 설계도인 클래스로부터 만들어진 하나의 인스턴스(실체, 구성 요소)
// 클래스 = 설계도
// 개요
// - 클래스
// 개체
// 클래스의 멤버: 메서드, 속성, 생성자, 소멸자, 대리자, 이벤트, 필드
// 클래스 = 설계도
// 클래스로 부터 만들어진 것이 개체이다. 

// 클래스의 의미: 현실세계의 개체를 만들어내는 설계도를 의미
// 프로그램 세계의 데이터 저장 공간(필드)과 기능(메서드)를 하나의 이름 (클래스명/개체명)으로 관리
// 클래스는 컨테이너 역할

// 개체 생성 순서
// step1. 메모리 할당 = new 키워드를 사용
// step2. 생성자를 통한 개체 초기화
// ex) Date when = new Date();

// Object LifrCycle(개체 라이프 사이클)
// 개체 생성시기: new 연산자를 이용한 메모리를 할당하고 개체를 생성
// 개체 사용 시기: 개체에 대한 메서드, 멤버 호출 / 접근
// 개체 소멸 시기: 개체에게 할당된 메모리는 실행 환경으로 회수, 가비지 컬렉터가 개체 소멸을 관장

// 클래스 라이프 사이클
// 할당: Managed heap 메모리 공간에 CLR에 의해서 개체를 위한 메모리 할당
// 인스턴스화: 클래스의 구조에 맞게 메모리 초기화, 생성자 호출
// 해체: 가비지 컬렉터가 사용되지 않는 개체를 소멸, 경우에 따라서는 IDisposable 인터페이스를 구현하여 Dispose 메서드를 구현할 수 있음

// 정적(스태틱) 멤버와 인스턴스 멤버
// 정적(static) 멤버: static 키워드가 붙은 멤버
// ex) 클래스명.멤버명
// 인스턴스 멤버: 클래스내에서 static 키워드가 붙지않은 멤버
// ex) 클래스 개체 = new 클래스();
// 개체.멤버명

// 클래스
// - 데이터와 메서드를 결합
// - 접근 권한의 통제
// - 상속
// - 인터페이스

